package com.cloud.study.employee.service.impl;

import com.cloud.study.employee.domain.EmployeeDto;
import com.cloud.study.employee.domain.EmployeeSearch;
import com.cloud.study.employee.entity.Employee;
import com.cloud.study.employee.entity.EmployeeExample;
import com.cloud.study.employee.service.EmployeeService;
import com.cloud.study.employee.dao.EmployeeDao;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import java.util.List;
import java.util.ArrayList;
import org.springframework.beans.BeanUtils;
/**
*  generated by AddClassPlugin plugin
*/

@Service
public class EmployeeServiceImpl implements EmployeeService {

    @Resource
    private EmployeeDao employeeDao;

    @Override
    public void addEmployee(EmployeeDto employeeDto) {
        Employee employee = dtoToEntity(employeeDto);
        employeeDao.insert(employee);
    }

    @Override
    public void updateByEmployeeSearch(EmployeeDto employeeDto, EmployeeSearch employeeSearch) {

    }

    @Override
    public EmployeeDto findById(Integer id) {
        Employee employee = employeeDao.selectByPrimaryKey(id);
        return employee == null ? null : entityToDto(employee);
    }

    @Override
    public List<EmployeeDto> searchByEmployeeSearch(EmployeeSearch employeeSearch) {
        List<EmployeeDto> employeeDtos = new ArrayList<>();
        if(employeeSearch != null){
            EmployeeExample employeeExample = getSearchExample(employeeSearch);

            employeeExample.setOrderByClause(employeeSearch.getOrderByClause());
            List<Employee> employees = employeeDao.selectByExample(employeeExample);
            employees.forEach(employee -> employeeDtos.add(entityToDto(employee)));
        }
        return employeeDtos;
    }

    @Override
    public Long count(EmployeeSearch employeeSearch) {
        EmployeeExample employeeExample = getSearchExample(employeeSearch);
        return employeeDao.countByExample(employeeExample);
    }

    /**
    * 查询条件设置
    * @param employeeSearch
    * @return
    */
    private EmployeeExample getSearchExample(EmployeeSearch employeeSearch){
        EmployeeExample employeeExample = new EmployeeExample();
        EmployeeExample.Criteria criteria = employeeExample.createCriteria();
        if(employeeSearch ==null){
            return employeeExample;
        }
        return employeeExample;
    }


    /**
    * entity to dto
    * @param employee
    * @return
    */
    private EmployeeDto entityToDto(Employee employee){
        EmployeeDto employeeDto = new EmployeeDto();
        BeanUtils.copyProperties(employee, employeeDto);
        return employeeDto;
    }

    /**
    * dto to entity
    * @param employeeDto
    * @return
    */
    private Employee dtoToEntity(EmployeeDto employeeDto){
        Employee employee = new Employee();
        BeanUtils.copyProperties(employeeDto, employee);
        return employee;
    }

}